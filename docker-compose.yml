services:
  qdrant:
    image: qdrant/qdrant:v1.15.5-gpu-nvidia
    container_name: qdrant
    restart: unless-stopped
    environment:
      - QDRANT__SERVICE__GRPC_PORT=6334
      - TZ=${TZ}
    volumes:
      - ${QDRANT_STORAGE}:/qdrant/storage
    ports:
      - "6333:6333"
      - "6334:6334"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/readyz"]
      interval: 10s
      timeout: 3s
      retries: 30

  vllm:
    image: vllm/vllm-openai:latest
    container_name: vllm
    restart: unless-stopped
    ipc: host
    ulimits:
      memlock: -1
      stack: 67108864
    shm_size: 16gb
    environment:
      - TZ=${TZ}
      - TORCH_CUDA_ARCH_LIST=${TORCH_CUDA_ARCH_LIST}
      - VLLM_TORCH_COMPILE_LEVEL=0
      - PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True
      # Add these for better stability
      - CUDA_LAUNCH_BLOCKING=0
      - TORCH_CUDA_MEMORY_FRACTION=0.9
      - CUDA_DEVICE_ORDER=PCI_BUS_ID
      - CUDA_VISIBLE_DEVICES=0
      - VLLM_LOGGING_LEVEL=DEBUG
    ports:
      - "8000:8000"
    command: >
      --model ${VLLM_MODEL}
      --tensor-parallel-size ${VLLM_TENSOR_PARALLEL_SIZE}
      --max-model-len ${VLLM_MAX_MODEL_LEN}
      --gpu-memory-utilization ${VLLM_GPU_MEMORY_UTILIZATION}
      --dtype auto
      --enable-prefix-caching
      --enable-chunked-prefill
      --trust-remote-code false
      --host 0.0.0.0
      --port 8000
      --max-num-seqs 128
      --max-num-batched-tokens ${VLLM_MAX_NUM_BATCHED_TOKENS:-32768}
      --block-size 16
      --kv-cache-dtype auto
    volumes:
      - huggingface_cache:/root/.cache/huggingface
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/v1/models"]
      interval: 15s
      timeout: 5s
      retries: 30

  # ============================================================
  # vLLM-LLaVA para análisis de imágenes/tablas
  # Se pausa/arranca bajo demanda por ingestor/manage_gpu.sh
  # ============================================================
  vllm-llava:
    image: vllm/vllm-openai:latest
    container_name: vllm-llava
    restart: no
    ipc: host
    ulimits:
      memlock: -1
      stack: 67108864
    shm_size: 16gb
    environment:
      - TZ=${TZ}
      - TORCH_CUDA_ARCH_LIST=${TORCH_CUDA_ARCH_LIST}
    ports:
      - "8002:8000"
    expose:
      - "8000"
    command: >
      --model llava-hf/llava-1.5-7b-hf
      --tensor-parallel-size 1
      --max-model-len 2048
      --gpu-memory-utilization 0.5
      --dtype float16
      --quantization bitsandbytes
      --load-format bitsandbytes
      --enable-prefix-caching
      --trust-remote-code false
      --host 0.0.0.0
      --port 8000
      --max-num-seqs 128
      --max-num-batched-tokens 4096
      --block-size 16
    volumes:
      - huggingface_cache:/root/.cache/huggingface
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/v1/models"]
      interval: 15s
      timeout: 5s
      retries: 30

  rag-api:
    build:
      context: ./rag-api
    container_name: rag-api
    restart: unless-stopped
    ipc: host
    ulimits:
      memlock: -1
      stack: 67108864
    shm_size: 8gb
    environment:
      - TZ=${TZ}
      - QDRANT_URL=${QDRANT_URL}
      - BM25_BASE_DIR=/whoosh
      - TOPIC_LABELS=${TOPIC_LABELS}
      - TOPIC_BASE_DIR=/topics
      - EMBED_MODEL_DEFAULT=${EMBED_MODEL_DEFAULT}
      - EMBED_MODEL_PROGRAMMING=${EMBED_MODEL_PROGRAMMING}
      - EMBED_MODEL_ELECTRONICS=${EMBED_MODEL_ELECTRONICS}
      - EMBED_MODEL_CHEMISTRY=${EMBED_MODEL_CHEMISTRY}
      - RERANK_MODEL=${RERANK_MODEL}
      - CTX_TOKENS_SOFT_LIMIT=${CTX_TOKENS_SOFT_LIMIT}
      - MAX_CHUNKS_PER_FILE=${MAX_CHUNKS_PER_FILE}
      - HYBRID_DENSE_K=${HYBRID_DENSE_K}
      - HYBRID_BM25_K=${HYBRID_BM25_K}
      - FINAL_TOPK=${FINAL_TOPK}
      - BM25_FALLBACK_TOKEN_THRESHOLD=${BM25_FALLBACK_TOKEN_THRESHOLD}
      - UPSTREAM_OPENAI_URL=${UPSTREAM_OPENAI_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TELEMETRY_PATH=${TELEMETRY_PATH}
    volumes:
      - ${TOPIC_BASE_DIR}:/topics:ro
      - ${BM25_BASE_DIR}:/whoosh
      - huggingface_cache:/root/.cache/huggingface
      - ./rag-api:/app
      - ${QDRANT_STORAGE}:/qdrant_storage
    ports:
      - "8001:8001"
    depends_on:
      - vllm
      - qdrant
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]

  ingestor:
    build:
      context: ./ingestor
      dockerfile: Dockerfile
    container_name: ingestor
    restart: "no"
    ipc: host
    ulimits:
      memlock: -1
      stack: 67108864
    shm_size: 16gb
    environment:
      - TZ=${TZ}
      - HF_HOME=/models_cache
      - QDRANT_URL=${QDRANT_URL}
      # Conecta a vLLM-LLaVA cuando está corriendo
      - VLLM_URL=http://vllm-llava:8000
      - LLAVA_CACHE_DB=/llava_cache/llava_cache.db
      - TOPIC_LABELS=${TOPIC_LABELS}
      - TOPIC_BASE_DIR=/topics
      - BM25_BASE_DIR=/whoosh
      - EMBED_MODEL_DEFAULT=${EMBED_MODEL_DEFAULT}
      - TORCH_CUDA_ARCH_LIST=${TORCH_CUDA_ARCH_LIST}
      - MIN_IMAGE_WIDTH=100
      - MIN_IMAGE_HEIGHT=100
      - LLM_ANALYSIS_TEMPERATURE=0.3
      - TOKENIZERS_PARALLELISM=false
      - OMP_NUM_THREADS=1
    volumes:
      - models_cache:/models_cache
      - ${TOPIC_BASE_DIR}:/topics
      - ${BM25_BASE_DIR}:/whoosh
      - llava_cache:/llava_cache
      - ./ingestor:/app
    depends_on:
      - qdrant
      - vllm-llava
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]

  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: openwebui
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - OPENAI_API_BASE_URL=http://rag-api:8001/v1
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ENABLE_OLLAMA_API=false
      - OLLAMA_BASE_URL=""
      - WEBUI_NAME=IA del Santiago Apóstol
      - WEBUI_URL=https://ia.santiagoapostol.net
      - ENABLE_ARENA=false
      - ENABLE_RAG=false
      # Confiar en los headers que envia oauth2-proxy
      - WEBUI_AUTH_TRUSTED_EMAIL_HEADER=X-Forwarded-Email
      - WEBUI_AUTH_TRUSTED_NAME_HEADER=X-Forwarded-User

      # Cookies "sanas" detrás de reverse proxy
      - WEBUI_SESSION_COOKIE_SAME_SITE=lax
      - WEBUI_AUTH_COOKIE_SAME_SITE=lax
      - WEBUI_SESSION_COOKIE_SECURE=true
      - WEBUI_AUTH_COOKIE_SECURE=true
    ports:
      - "8080:8080"
    volumes:
      - ./openwebui/data:/app/backend/data
      - ./openwebui/custom/apple-touch-icon.png:/app/backend/open_webui/static/apple-touch-icon.png:ro
      - ./openwebui/custom/custom.css:/app/backend/open_webui/static/custom.css:ro
      - ./openwebui/custom/favicon-96x96.png:/app/backend/open_webui/static/favicon-96x96.png:ro
      - ./openwebui/custom/favicon.ico:/app/backend/open_webui/static/favicon.ico:ro
      - ./openwebui/custom/favicon.png:/app/backend/open_webui/static/favicon.png:ro
      - ./openwebui/custom/logo.png:/app/backend/open_webui/static/logo.png:ro
      - ./openwebui/custom/splash.png:/app/backend/open_webui/static/splash.png:ro
    depends_on:
      - rag-api

  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.7.1
    container_name: oauth2-proxy
    restart: unless-stopped
    ports:
      - "4180:4180"
    volumes:
      - ./oauth2-proxy/oauth2-proxy.cfg:/etc/oauth2-proxy/oauth2-proxy.cfg:ro
      - ./oauth2-proxy/templates:/etc/oauth2-proxy/templates:ro
    environment:
      - TZ=${TZ}
    command:
      - --config=/etc/oauth2-proxy/oauth2-proxy.cfg
      - --cookie-secret=${OAUTH2_COOKIE_SECRET}
      - --client-id=${OAUTH2_CLIENT_ID}
      - --client-secret=${OAUTH2_CLIENT_SECRET}
      - --redirect-url=${OAUTH2_REDIRECT_URL}
      - --email-domain=${OAUTH2_EMAIL_DOMAINS}
      - --code-challenge-method=S256
      - --provider=oidc
      - --oidc-issuer-url=https://accounts.google.com
      - --http-address=0.0.0.0:4180
      - --upstream=http://openwebui:8080
      - --custom-templates-dir=/etc/oauth2-proxy/templates
    depends_on:
      - openwebui

volumes:
  huggingface_cache:
  llava_cache:
  models_cache:
