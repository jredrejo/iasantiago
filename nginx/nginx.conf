user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;

  # Global settings for streaming/SSE
  proxy_buffering off;
  proxy_request_buffering off;
  proxy_http_version 1.1;

  # Buffer sizes (keep small for streaming)
  proxy_buffer_size 4k;
  proxy_buffers 8 4k;
  proxy_busy_buffers_size 8k;

  # Upstream definitions
  upstream openwebui {
    server 127.0.0.1:8080;
    keepalive 32;
  }

  upstream rag-api {
    server 127.0.0.1:8001;
    keepalive 32;
  }

  # TLS Configuration with Let's Encrypt
  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ia.santiagoapostol.net iasantiago.santiagoapostol.net ia.santiago;

    access_log /var/log/nginx/openwebui_access.log;
    error_log /var/log/nginx/openwebui_error.log;

    # Let's Encrypt certificates
    ssl_certificate     /etc/letsencrypt/live/ia.santiagoapostol.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ia.santiagoapostol.net/privkey.pem;

    # Include SSL parameters snippet
    include /etc/nginx/snippets/ssl-params.conf;

    # Callback OAuth para OpenWebUI
    location = /_auth/callback {
      proxy_pass http://openwebui/_auth/callback;
      include /etc/nginx/snippets/streaming-proxy.conf;
    }

    # Main location - Open WebUI
    location / {
      proxy_pass http://openwebui/;
      include /etc/nginx/snippets/streaming-proxy.conf;
    }

    # Documentos est√°ticos
    location /docs/ {
      autoindex on;
      alias /opt/iasantiago-rag/topics/;

      # Security headers
      add_header X-Content-Type-Options nosniff;
      add_header X-Frame-Options DENY;
    }
  }

  # HTTP to HTTPS redirect
  server {
    listen 80;
    listen [::]:80;
    server_name ia.santiagoapostol.net iasantiago.santiagoapostol.net ia.santiago;

    # Allow Let's Encrypt ACME challenge
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    # Redirect everything else to HTTPS
    location / {
      return 301 https://$server_name$request_uri;
    }
  }
}
